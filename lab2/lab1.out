RESERVADO with
ID Ada
DOT .
ID Text_IO
SEMICOLON ;
RESERVADO use
ID Ada
DOT .
ID Text_IO
SEMICOLON ;
RESERVADO with
ID Ada
DOT .
ID Integer_Text_IO
SEMICOLON ;
RESERVADO use
ID Ada
DOT .
ID Integer_Text_IO
SEMICOLON ;
RESERVADO with
ID Ada
DOT .
ID Numerics
SEMICOLON ;
RESERVADO use
ID Ada
DOT .
ID Numerics
SEMICOLON ;
RESERVADO procedure
ID Lab1
RESERVADO is
RESERVADO type
ID ponto_t
RESERVADO is
RESERVADO record
ID x
COLON :
INTEGER Integer
SEMICOLON ;
ID y
COLON :
INTEGER Integer
SEMICOLON ;
RESERVADO end
RESERVADO record
SEMICOLON ;
RESERVADO type
ID Vetor_Ponto
RESERVADO is
RESERVADO array
LPARENTHESIS (
ID Natural
RESERVADO range
BOX <>
RPARENTHESIS )
RESERVADO of
ID ponto_t
SEMICOLON ;
RESERVADO function
ID func
LPARENTHESIS (
ID v
COLON :
ID Vetor_Ponto
SEMICOLON ;
ID n
COLON :
INTEGER Integer
RPARENTHESIS )
RESERVADO return
LONGFLOAT Long_Float
RESERVADO is
ID res
COLON :
LONGFLOAT Long_Float
SEMICOLON ;
ID temp
COLON :
LONGFLOAT Long_Float
SEMICOLON ;
ID i
COLON :
INTEGER Integer
ASSIGNMENT :=
ID v
APOSTROPHE '
ID Last
SEMICOLON ;
RESERVADO begin
RESERVADO if
ID n
LESSTHANOREQUAL <=
NUMBER 0
RESERVADO then
RESERVADO return
NUMBER 1
DOT .
NUMBER 0
SEMICOLON ;
RESERVADO elsif
ID n
EQUALS =
NUMBER 1
RESERVADO then
RESERVADO return
LPARENTHESIS (
NUMBER 1
DOT .
NUMBER 01
PLUS +
LONGFLOAT Long_Float
LPARENTHESIS (
ID v
LPARENTHESIS (
NUMBER 0
RPARENTHESIS )
DOT .
ID x
RPARENTHESIS )
SOLIDUS /
NUMBER 1
DOT .
NUMBER 0
ID E2
PLUS +
LONGFLOAT Long_Float
LPARENTHESIS (
ID v
LPARENTHESIS (
NUMBER 0
RPARENTHESIS )
DOT .
ID y
RPARENTHESIS )
SOLIDUS /
NUMBER 0
DOT .
NUMBER 1
ID E
HYPHEN -
NUMBER 2
RPARENTHESIS )
SEMICOLON ;
RESERVADO end
RESERVADO if
SEMICOLON ;
ID res
ASSIGNMENT :=
NUMBER 0
DOT .
NUMBER 25
ID E
HYPHEN -
NUMBER 13
SEMICOLON ;
RESERVADO loop
RESERVADO exit
RESERVADO when
ID i
LESSTHAN <
ID v
APOSTROPHE '
ID First
RESERVADO or
RESERVADO else
ID v
LPARENTHESIS (
ID i
RPARENTHESIS )
DOT .
ID x
LESSTHANOREQUAL <=
NUMBER 0
SEMICOLON ;
ID temp
ASSIGNMENT :=
LONGFLOAT Long_FLoat
LPARENTHESIS (
LPARENTHESIS (
ID v
LPARENTHESIS (
ID i
RPARENTHESIS )
DOT .
ID y
ASTERISK *
ID v
LPARENTHESIS (
ID i
RPARENTHESIS )
DOT .
ID x
RPARENTHESIS )
RESERVADO mod
NUMBER 123
RPARENTHESIS )
SEMICOLON ;
RESERVADO if
ID temp
LESSTHAN <
NUMBER 0
DOT .
NUMBER 0
RESERVADO then
ID res
ASSIGNMENT :=
ID res
HYPHEN -
ID res
ASTERISK *
NUMBER 2
DOT .
NUMBER 0
ID E
HYPHEN -
NUMBER 2
PLUS +
ID func
LPARENTHESIS (
ID v
COMMA ,
ID n
HYPHEN -
NUMBER 1
RPARENTHESIS )
ASTERISK *
ID temp
SEMICOLON ;
RESERVADO else
ID res
ASSIGNMENT :=
ID res
PLUS +
ID res
ASTERISK *
NUMBER 0
DOT .
NUMBER 3
ID E3
PLUS +
ID func
LPARENTHESIS (
ID v
COMMA ,
ID n
HYPHEN -
NUMBER 2
RPARENTHESIS )
ASTERISK *
ID temp
SEMICOLON ;
ID Put_Line
LPARENTHESIS (
QUOTATION "
ID Estranho
COMMA ,
ID ne
QUESTION ?
QUOTATION "
RPARENTHESIS )
SEMICOLON ;
RESERVADO end
RESERVADO if
SEMICOLON ;
ID i
ASSIGNMENT :=
ID i
HYPHEN -
NUMBER 1
SEMICOLON ;
RESERVADO end
RESERVADO loop
SEMICOLON ;
RESERVADO return
ID res
SEMICOLON ;
RESERVADO end
ID func
SEMICOLON ;
ID ponto
COLON :
ID Vetor_Ponto
LPARENTHESIS (
NUMBER 0
DOUBLEDOT ..
NUMBER 3
RPARENTHESIS )
ASSIGNMENT :=
LPARENTHESIS (
NUMBER 0
ARROW =>
LPARENTHESIS (
NUMBER 10
COMMA ,
NUMBER 20
RPARENTHESIS )
COMMA ,
NUMBER 1
ARROW =>
LPARENTHESIS (
NUMBER 30
COMMA ,
NUMBER 40
RPARENTHESIS )
COMMA ,
NUMBER 2
ARROW =>
LPARENTHESIS (
NUMBER 50
COMMA ,
NUMBER 60
RPARENTHESIS )
COMMA ,
NUMBER 3
ARROW =>
LPARENTHESIS (
NUMBER 70
COMMA ,
NUMBER 80
RPARENTHESIS )
RPARENTHESIS )
SEMICOLON ;
ID result
COLON :
LONGFLOAT Long_Float
SEMICOLON ;
RESERVADO begin
ID result
ASSIGNMENT :=
ID func
LPARENTHESIS (
ID ponto
COMMA ,
NUMBER 5
RPARENTHESIS )
SEMICOLON ;
ID Put_Line
LPARENTHESIS (
LONGFLOAT Long_Float
APOSTROPHE '
ID Image
LPARENTHESIS (
ID result
RPARENTHESIS )
RPARENTHESIS )
SEMICOLON ;
RESERVADO end
ID Lab1
SEMICOLON ;
